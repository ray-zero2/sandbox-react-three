{"version":3,"sources":["modules/glContents/GlContents.ts","modules/glContents/index.ts","components/bgCanvas/BgCanvas.tsx","components/description/Descriptions.tsx","App.tsx","index.tsx"],"names":["DIRECTIONS","GlContents","element","resolution","renderer","scene","camera","mesh","directionNumber","rotateDirection","console","log","this","width","window","innerWidth","height","innerHeight","THREE","canvas","antialias","alpha","setPixelRatio","devicePixelRatio","setSize","position","set","lookAt","add","bind","rotation","render","requestAnimationFrame","message","addEventListener","aspect","updateProjectionMatrix","BgCanvass","forwardRef","props","ref","instanceExists","useRef","canvasElemRef","glContents","useLayoutEffect","current","warn","useImperativeHandle","cameraUp","cameraDown","id","className","memo","DESC_CONTENTS","title","description","Descriptions","map","desc","pressed","App","useState","pressedKey","setPressedKey","canvasRef","handleKeyDown","useCallback","e","key","useEffect","removeEventListener","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a45d3627.chunk.js","sourcesContent":["import * as THREE from 'three';\n\nconst DIRECTIONS: ['x', 'y', 'z'] = ['x', 'y', 'z'];\n\nexport default class GlContents {\n  public resolution: { width: number, height: number };\n  public renderer: THREE.WebGLRenderer | null;\n  public scene: THREE.Scene;\n  public camera: THREE.PerspectiveCamera;\n  public mesh: THREE.Mesh;\n  public directionNumber: number;\n  public rotateDirection: 'x' | 'y' | 'z';\n\n  constructor(element: HTMLCanvasElement) {\n    console.log('THREE JS CREATE!');\n    this.resolution = {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n    this.renderer = new THREE.WebGLRenderer({\n      canvas: element,\n      antialias: true,\n      alpha: true\n    });\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(this.resolution.width, this.resolution.height);\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.PerspectiveCamera(45, this.resolution.width/this.resolution.height, 1, 10000);\n    this.camera.position.set(0, 0, 1000);\n    this.camera.lookAt(0, 0, 0);\n    this.mesh = new THREE.Mesh(\n      new THREE.BoxGeometry(400, 400, 400),\n      new THREE.MeshNormalMaterial()\n    )\n    this.scene.add(this.mesh);\n\n    this.directionNumber = 1;\n    this.rotateDirection = DIRECTIONS[this.directionNumber];\n    this.bind();\n  }\n\n  render() {\n    this.mesh.rotation[this.rotateDirection] += 0.01;\n    this.renderer!.render(this.scene, this.camera);\n\n    requestAnimationFrame(this.render.bind(this));\n  }\n\n  cameraUp() {\n    this.camera.position.add(new THREE.Vector3(0, 100, 0));\n    this.camera.lookAt(0, 0, 0);\n  }\n\n  cameraDown() {\n    this.camera.position.add(new THREE.Vector3(0, -100, 0));\n    this.camera.lookAt(0, 0, 0);\n  }\n\n  changeRotateDirection() {\n    this.directionNumber = (this.directionNumber+1) % 3;\n    this.rotateDirection = DIRECTIONS[this.directionNumber];\n  }\n\n  log(message: string) {\n    console.log(message);\n  }\n\n  bind() {\n    window.addEventListener('resize', () => {\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n      this.resolution = {width, height};\n      this.renderer?.setSize(width, height);\n      this.camera.aspect = width/height;\n      this.camera.updateProjectionMatrix();\n    })\n  }\n}\n","import  GlContents from './GlContents'\n\nexport default GlContents;\n","import {\n  forwardRef,\n  memo,\n  useImperativeHandle,\n  useLayoutEffect,\n  useRef,\n} from \"react\";\nimport GlContents from \"../../modules/glContents\";\n\nimport \"./BgCanvas.css\";\n\nexport interface IHandler {\n  cameraUp: () => void;\n  cameraDown: () => void;\n}\n\ninterface IProps {}\n\nconst BgCanvass = forwardRef<IHandler, IProps>((props, ref) => {\n  console.log(\"canvas component was rendered\");\n  const instanceExists = useRef(false); //デバッグ用。外部クラスをインスタンス化済みかどうか。\n  const canvasElemRef = useRef<HTMLCanvasElement>(null);\n  const glContents = useRef<GlContents>();\n\n  useLayoutEffect(() => {\n    console.log(\"useLayoutEffect\");\n\n    if (instanceExists.current) console.warn(\"danger!\");\n    instanceExists.current = true;\n\n    glContents.current = new GlContents(canvasElemRef.current!);\n    glContents.current.render();\n  }, []);\n\n  useImperativeHandle<IHandler, IHandler>(\n    ref,\n    () => ({\n      cameraUp: () => {\n        glContents.current?.cameraUp();\n      },\n      cameraDown: () => {\n        glContents.current?.cameraDown();\n      },\n    }),\n    []\n  );\n\n  return <canvas ref={canvasElemRef} id=\"canvas\" className=\"canvas\" />;\n});\n\nexport default memo(BgCanvass);\n","import { memo, VFC } from \"react\";\nimport \"./Descriptions.css\";\n\nconst DESC_CONTENTS = [\n  {\n    title: \"u\",\n    description: \"camera up\",\n  },\n  {\n    title: \"d\",\n    description: \"camera down\",\n  },\n  // {\n  //   title: \"c\",\n  //   description: \"change direction\",\n  // },\n];\n\ninterface IProps {\n  pressed?: string;\n}\n\nconst Descriptions: VFC<IProps> = (props) => {\n  return (\n    <section className=\"wrapper\">\n      <h1 className=\"title\">React & THREE.js TEST</h1>\n      <section className=\"contents\">\n        <h2 className=\"howto-title\">How To Use</h2>\n        <ul className=\"howto-list\">\n          {DESC_CONTENTS.map((desc) => (\n            <li className=\"howto-item\" key={desc.title}>\n              <dl className=\"description\">\n                <dt className=\"description-title\">keydown \"{desc.title}\"</dt>\n                <dd className=\"description-content\">{desc.description}</dd>\n              </dl>\n            </li>\n          ))}\n        </ul>\n      </section>\n      <p className=\"key-name\">keydown: \"{props.pressed}\"</p>\n    </section>\n  );\n};\n\nexport default memo(Descriptions);\n","import { useCallback, useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\nimport BgCanvas, { IHandler } from \"./components/bgCanvas/BgCanvas\";\nimport Descriptions from \"./components/description/Descriptions\";\n\nfunction App() {\n  const [pressedKey, setPressedKey] = useState(\"\");\n  const canvasRef = useRef<IHandler>(null);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    const key = e.key;\n    setPressedKey(key);\n\n    switch (key) {\n      case \"d\":\n        canvasRef.current?.cameraDown();\n        break;\n      case \"u\":\n        canvasRef.current?.cameraUp();\n        break;\n    }\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [handleKeyDown]);\n\n  return (\n    <div className=\"App\">\n      <BgCanvas ref={canvasRef}></BgCanvas>\n      <Descriptions pressed={pressedKey} />\n    </div>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}